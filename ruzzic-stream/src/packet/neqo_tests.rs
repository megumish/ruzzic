use crate::frame::Frames;

use super::*;

use std::io::Cursor;

#[test]
fn neqo_client_initial_packet() {
    const NEQO_CLIENT_INITIAL_PACKET: &[u8] = &[
        192, 0, 0, 0, 1, 14, 235, 214, 70, 57, 212, 238, 63, 22, 27, 127, 99, 173, 162, 52, 0, 0,
        66, 5, 0, 6, 0, 66, 0, 1, 0, 1, 252, 3, 3, 171, 53, 10, 48, 142, 153, 180, 131, 197, 209,
        123, 107, 62, 157, 243, 176, 128, 238, 81, 111, 234, 177, 62, 111, 23, 132, 47, 84, 60, 35,
        153, 40, 0, 0, 6, 19, 1, 19, 3, 19, 2, 1, 0, 1, 205, 0, 23, 0, 0, 255, 1, 0, 1, 0, 0, 10,
        0, 20, 0, 18, 0, 29, 0, 23, 0, 24, 0, 25, 1, 0, 1, 1, 1, 2, 1, 3, 1, 4, 0, 16, 0, 5, 0, 3,
        2, 104, 51, 0, 5, 0, 5, 1, 0, 0, 0, 0, 0, 51, 0, 38, 0, 36, 0, 29, 0, 32, 200, 183, 179,
        86, 218, 88, 58, 207, 55, 163, 148, 23, 237, 195, 154, 106, 97, 162, 213, 15, 169, 202, 41,
        148, 161, 215, 37, 217, 215, 142, 165, 34, 0, 43, 0, 3, 2, 3, 4, 0, 13, 0, 24, 0, 22, 4, 3,
        5, 3, 6, 3, 2, 3, 8, 4, 8, 5, 8, 6, 4, 1, 5, 1, 6, 1, 2, 1, 0, 45, 0, 2, 1, 1, 0, 28, 0, 2,
        64, 1, 0, 57, 0, 67, 5, 4, 128, 16, 0, 0, 7, 4, 128, 16, 0, 0, 9, 1, 16, 6, 4, 128, 16, 0,
        0, 32, 1, 0, 15, 0, 14, 1, 8, 12, 0, 8, 1, 16, 11, 1, 20, 1, 4, 128, 0, 117, 48, 192, 0, 0,
        0, 255, 2, 222, 26, 2, 67, 232, 4, 8, 255, 255, 255, 255, 255, 255, 255, 255, 106, 178, 0,
        0, 21, 0, 246, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    ];

    let mut input = Cursor::new(NEQO_CLIENT_INITIAL_PACKET);
    let initial_packet: Packet = input.read_bytes_to().unwrap();
    assert_eq!(
        initial_packet.raw_length(),
        NEQO_CLIENT_INITIAL_PACKET.len()
    );
    eprintln!("{:#x?}", initial_packet);
}

#[test]
fn neqo_server_initial_packet() {
    const NEQO_SERVER_INITIAL_PACKET: &[u8] = &[
        192, 0, 0, 0, 1, 0, 10, 189, 96, 17, 245, 154, 105, 252, 108, 171, 44, 0, 64, 100, 0, 2, 0,
        0, 0, 0, 6, 0, 64, 90, 2, 0, 0, 86, 3, 3, 219, 98, 183, 101, 225, 209, 143, 84, 159, 231,
        81, 246, 36, 1, 52, 248, 222, 203, 11, 68, 30, 155, 62, 173, 174, 167, 185, 90, 104, 45,
        91, 10, 0, 19, 1, 0, 0, 46, 0, 51, 0, 36, 0, 29, 0, 32, 18, 139, 193, 217, 226, 59, 133,
        108, 95, 30, 210, 203, 91, 196, 57, 52, 155, 5, 36, 50, 96, 211, 110, 174, 98, 245, 73,
        178, 5, 87, 111, 106, 0, 43, 0, 2, 3, 4,
    ];

    let mut input = Cursor::new(NEQO_SERVER_INITIAL_PACKET);
    let initial_packet: Packet = input.read_bytes_to().unwrap();
    assert_eq!(
        initial_packet.raw_length(),
        NEQO_SERVER_INITIAL_PACKET.len()
    );
    eprintln!("{:#x?}", initial_packet);
}

#[test]
fn neqo_nazo_packet() {
    let neqo_nazo_packet = [
        64, 141, 0, 0, 1, 10, 160, 27, 20, 46, 49, 162, 118, 15, 238, 212, 0, 0, 64, 23, 144, 109,
        39, 185, 69, 76, 210, 136, 139, 39, 22, 167, 84, 65, 127, 226, 16, 209, 150, 76, 134, 183,
        41, 226, 0, 0, 0, 1, 10, 160, 27, 20, 46, 49, 162, 118, 15, 238, 212, 0, 64, 62, 12, 18,
        156, 171, 167, 182, 163, 218, 152, 28, 195, 43, 154, 204, 94, 217, 174, 138, 39, 109, 174,
        207, 122, 167, 137, 193, 39, 168, 27, 250, 108, 127, 105, 153, 140, 134, 171, 200, 159,
        158, 145, 211, 207, 159, 74, 210, 122, 69, 137, 121, 175, 188, 106, 86, 230, 217, 12, 185,
        110, 146, 101, 4, 0, 160, 27, 20, 46, 49, 162, 118, 15, 238, 212, 0, 64, 175, 0, 2, 78,
        211, 0,
    ];

    let mut input = Cursor::new(neqo_nazo_packet);
    let nazo_packet: Packet = input.read_bytes_to().unwrap();
    let mut payload = Cursor::new(nazo_packet.payload());
    let frames: Frames = payload.read_bytes_to().unwrap();
    eprintln!("{nazo_packet:?}");
    eprintln!("{frames:?}")
}
